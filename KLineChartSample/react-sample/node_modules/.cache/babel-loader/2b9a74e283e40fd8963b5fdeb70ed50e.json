{"ast":null,"code":"var _jsxFileName = \"/home/riddle/uchart/KLineChartSample/react-sample/src/chart/TechnicalIndicatorKLineChart.jsx\";\nimport React, { useEffect } from 'react';\nimport { init, dispose } from 'klinecharts';\nimport generatedKLineDataList from '../utils/generatedKLineDataList';\nimport Layout from '../Layout';\nconst fruits = ['🍏', '🍎', '🍐', '🍊', '🍋', '🍌', '🍉', '🍇', '🍓', '🍈', '🍒', '🍑', '🍍', '🥥', '🥝', '🥭', '🥑', '🍏']; // 自定义指标\n\nconst emojiTechnicalIndicator = {\n  name: 'EMOJI',\n  plots: [{\n    key: 'emoji'\n  }],\n  calcTechnicalIndicator: kLineDataList => {\n    const result = [];\n    kLineDataList.forEach(kLineData => {\n      result.push({\n        emoji: kLineData.close,\n        text: fruits[Math.floor(Math.random() * 17)]\n      });\n    });\n    return result;\n  },\n  render: (ctx, {\n    from,\n    to,\n    kLineDataList,\n    technicalIndicatorDataList\n  }, {\n    barSpace\n  }, options, xAxis, yAxis) => {\n    ctx.font = `${barSpace}px Helvetica Neue`;\n    ctx.textAlign = 'center';\n\n    for (let i = from; i < to; i++) {\n      const data = technicalIndicatorDataList[i];\n      const x = xAxis.convertToPixel(i);\n      const y = yAxis.convertToPixel(data.emoji);\n      ctx.fillText(data.text, x, y);\n    }\n  }\n};\nconst mainTechnicalIndicatorTypes = ['MA', 'EMA', 'SAR'];\nconst subTechnicalIndicatorTypes = ['VOL', 'MACD', 'KDJ'];\nexport default function TechnicalIndicatorKLineChart() {\n  let kLineChart;\n  let paneId;\n  useEffect(() => {\n    kLineChart = init('technical-indicator-k-line'); // 将自定义技术指标添加到图表\n\n    kLineChart.addCustomTechnicalIndicator(emojiTechnicalIndicator);\n    paneId = kLineChart.createTechnicalIndicator('VOL', false);\n    kLineChart.applyNewData(generatedKLineDataList());\n    return () => {\n      dispose('technical-indicator-k-line');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"\\u6280\\u672F\\u6307\\u6807\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"technical-indicator-k-line\",\n    className: \"k-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"k-line-chart-menu-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"\\u4E3B\\u56FE\\u6307\\u6807\"), mainTechnicalIndicatorTypes.map(type => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: type,\n      onClick: _ => {\n        kLineChart.createTechnicalIndicator(type, false, {\n          id: 'candle_pane'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, type);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _ => {\n      kLineChart.createTechnicalIndicator('EMOJI', true, {\n        id: 'candle_pane'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"\\u81EA\\u5B9A\\u4E49\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 10,\n      paddingLeft: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"\\u526F\\u56FE\\u6307\\u6807\"), subTechnicalIndicatorTypes.map(type => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: type,\n      onClick: _ => {\n        kLineChart.createTechnicalIndicator(type, false, {\n          id: paneId\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, type);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _ => {\n      kLineChart.createTechnicalIndicator('EMOJI', false, {\n        id: paneId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"\\u81EA\\u5B9A\\u4E49\")));\n}","map":{"version":3,"sources":["/home/riddle/uchart/KLineChartSample/react-sample/src/chart/TechnicalIndicatorKLineChart.jsx"],"names":["React","useEffect","init","dispose","generatedKLineDataList","Layout","fruits","emojiTechnicalIndicator","name","plots","key","calcTechnicalIndicator","kLineDataList","result","forEach","kLineData","push","emoji","close","text","Math","floor","random","render","ctx","from","to","technicalIndicatorDataList","barSpace","options","xAxis","yAxis","font","textAlign","i","data","x","convertToPixel","y","fillText","mainTechnicalIndicatorTypes","subTechnicalIndicatorTypes","TechnicalIndicatorKLineChart","kLineChart","paneId","addCustomTechnicalIndicator","createTechnicalIndicator","applyNewData","paddingRight","map","type","_","id","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst fruits = [\n  '🍏', '🍎', '🍐', '🍊', '🍋', '🍌',\n  '🍉', '🍇', '🍓', '🍈', '🍒', '🍑',\n  '🍍', '🥥', '🥝', '🥭', '🥑', '🍏'\n]\n\n// 自定义指标\nconst emojiTechnicalIndicator = {\n  name: 'EMOJI',\n  plots: [\n    { key: 'emoji' }\n  ],\n  calcTechnicalIndicator: (kLineDataList) => {\n    const result = []\n    kLineDataList.forEach(kLineData => {\n      result.push({ emoji: kLineData.close, text: fruits[Math.floor(Math.random() * 17)] })\n    })\n    return result\n  },\n  render: (\n    ctx,\n    { from, to, kLineDataList, technicalIndicatorDataList },\n    { barSpace },\n    options, xAxis, yAxis\n  ) => {\n    ctx.font = `${barSpace}px Helvetica Neue`\n    ctx.textAlign = 'center'\n    for (let i = from; i < to; i++) {\n      const data = technicalIndicatorDataList[i]\n      const x = xAxis.convertToPixel(i)\n      const y = yAxis.convertToPixel(data.emoji)\n      ctx.fillText(data.text, x, y)\n    }\n  }\n}\n\nconst mainTechnicalIndicatorTypes = ['MA', 'EMA', 'SAR']\nconst subTechnicalIndicatorTypes = ['VOL', 'MACD', 'KDJ']\n\nexport default function TechnicalIndicatorKLineChart () {\n  let kLineChart\n  let paneId\n  useEffect(() => {\n    kLineChart = init('technical-indicator-k-line')\n    // 将自定义技术指标添加到图表\n    kLineChart.addCustomTechnicalIndicator(emojiTechnicalIndicator)\n    paneId = kLineChart.createTechnicalIndicator('VOL', false)\n    kLineChart.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('technical-indicator-k-line')\n    }\n  }, [])\n  return (\n    <Layout\n      title=\"技术指标\">\n      <div id=\"technical-indicator-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        <span style={{ paddingRight: 10 }}>主图指标</span>\n        {\n          mainTechnicalIndicatorTypes.map(type => {\n            return (\n              <button\n                key={type}\n                onClick={_ => {\n                  kLineChart.createTechnicalIndicator(type, false, { id: 'candle_pane' })\n                }}>\n                {type}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={_ => {\n            kLineChart.createTechnicalIndicator('EMOJI', true, { id: 'candle_pane' })\n          }}>\n          自定义\n        </button>\n        <span style={{ paddingRight: 10, paddingLeft: 12 }}>副图指标</span>\n        {\n          subTechnicalIndicatorTypes.map(type => {\n            return (\n              <button\n                key={type}\n                onClick={_ => {\n                  kLineChart.createTechnicalIndicator(type, false, { id: paneId })\n                }}>\n                {type}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={_ => {\n            kLineChart.createTechnicalIndicator('EMOJI', false, { id: paneId })\n          }}>\n          自定义\n        </button>\n      </div>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}