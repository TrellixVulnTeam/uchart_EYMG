{"ast":null,"code":"var _jsxFileName = \"/home/riddle/uchart/KLineChartSample/react-sample/src/chart/LanguageKLineChart.jsx\";\nimport React, { PureComponent } from 'react';\nimport { init, dispose } from 'klinecharts';\nimport generatedKLineDataList from '../utils/generatedKLineDataList';\nimport Layout from '../Layout';\n\nfunction getLanguageOptions(language) {\n  return {\n    candle: {\n      tooltip: {\n        labels: language === 'zh-CN' ? ['时间', '开', '收', '高', '低', '成交量'] : language === 'zh-HK' ? ['時間', '開', '收', '高', '低', '成交量'] : ['T', 'O', 'C', 'H', 'L', 'V']\n      }\n    }\n  };\n}\n\nconst locals = [{\n  key: 'zh-CN',\n  text: '简体中文'\n}, {\n  key: 'zh-HK',\n  text: '繁体中文'\n}, {\n  key: 'en-US',\n  text: 'English'\n}];\nexport default class LanguageKLineChart extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: 'zh-CN'\n    };\n  }\n\n  componentDidMount() {\n    this.kLineChart = init('language-k-line');\n    this.kLineChart.applyNewData(generatedKLineDataList());\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.language !== this.state.language) {\n      this.kLineChart.setStyleOptions(getLanguageOptions(this.state.language));\n    }\n  }\n\n  componentWillUnmount() {\n    dispose('language-k-line');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      title: \"\\u591A\\u8BED\\u8A00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"language-k-line\",\n      className: \"k-line-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"k-line-chart-menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, locals.map(({\n      key,\n      text\n    }) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: key,\n        onClick: _ => {\n          this.setState({\n            language: key\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, text);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/riddle/uchart/KLineChartSample/react-sample/src/chart/LanguageKLineChart.jsx"],"names":["React","PureComponent","init","dispose","generatedKLineDataList","Layout","getLanguageOptions","language","candle","tooltip","labels","locals","key","text","LanguageKLineChart","state","componentDidMount","kLineChart","applyNewData","componentDidUpdate","prevProps","prevState","snapshot","setStyleOptions","componentWillUnmount","render","map","_","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,aAA9B;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEH,QAAQ,KAAK,OAAb,GACJ,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,KAA3B,CADI,GAEJA,QAAQ,KAAK,OAAb,GACE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,KAA3B,CADF,GAEE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AALC;AADH;AADH,GAAP;AAWD;;AAED,MAAMI,MAAM,GAAG,CACb;AAAEC,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CADa,EAEb;AAAED,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAFa,EAGb;AAAED,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAHa,CAAf;AAMA,eAAe,MAAMC,kBAAN,SAAiCb,aAAjC,CAA+C;AAAA;AAAA;AAAA,SAC5Dc,KAD4D,GACpD;AACNR,MAAAA,QAAQ,EAAE;AADJ,KADoD;AAAA;;AAK5DS,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,UAAL,GAAkBf,IAAI,CAAC,iBAAD,CAAtB;AACA,SAAKe,UAAL,CAAgBC,YAAhB,CAA6Bd,sBAAsB,EAAnD;AACD;;AAEDe,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAwBC,QAAxB,EAAkC;AAClD,QAAID,SAAS,CAACd,QAAV,KAAuB,KAAKQ,KAAL,CAAWR,QAAtC,EAAgD;AAC9C,WAAKU,UAAL,CAAgBM,eAAhB,CAAgCjB,kBAAkB,CAAC,KAAKS,KAAL,CAAWR,QAAZ,CAAlD;AACD;AACF;;AAEDiB,EAAAA,oBAAoB,GAAI;AACtBrB,IAAAA,OAAO,CAAC,iBAAD,CAAP;AACD;;AAEDsB,EAAAA,MAAM,GAAI;AACR,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,oBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AACE,MAAA,SAAS,EAAC,6BADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGId,MAAM,CAACe,GAAP,CAAW,CAAC;AAAEd,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KAAmB;AAC5B,0BACE;AACE,QAAA,GAAG,EAAED,GADP;AAEE,QAAA,OAAO,EAAEe,CAAC,IAAI;AACZ,eAAKC,QAAL,CAAc;AACZrB,YAAAA,QAAQ,EAAEK;AADE,WAAd;AAGD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGC,IAPH,CADF;AAWD,KAZD,CAHJ,CAHF,CADF;AAwBD;;AA7C2D","sourcesContent":["import React, { PureComponent } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nfunction getLanguageOptions (language) {\n  return {\n    candle: {\n      tooltip: {\n        labels: language === 'zh-CN'\n          ? ['时间', '开', '收', '高', '低', '成交量']\n          : language === 'zh-HK'\n            ? ['時間', '開', '收', '高', '低', '成交量']\n            : ['T', 'O', 'C', 'H', 'L', 'V']\n      }\n    }\n  }\n}\n\nconst locals = [\n  { key: 'zh-CN', text: '简体中文' },\n  { key: 'zh-HK', text: '繁体中文' },\n  { key: 'en-US', text: 'English' }\n]\n\nexport default class LanguageKLineChart extends PureComponent {\n  state = {\n    language: 'zh-CN'\n  }\n\n  componentDidMount () {\n    this.kLineChart = init('language-k-line')\n    this.kLineChart.applyNewData(generatedKLineDataList())\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    if (prevState.language !== this.state.language) {\n      this.kLineChart.setStyleOptions(getLanguageOptions(this.state.language))\n    }\n  }\n\n  componentWillUnmount () {\n    dispose('language-k-line')\n  }\n\n  render () {\n    return (\n      <Layout\n        title=\"多语言\">\n        <div id=\"language-k-line\" className=\"k-line-chart\"/>\n        <div\n          className=\"k-line-chart-menu-container\">\n          {\n            locals.map(({ key, text }) => {\n              return (\n                <button\n                  key={key}\n                  onClick={_ => {\n                    this.setState({\n                      language: key\n                    })\n                  }}>\n                  {text}\n                </button>\n              )\n            })\n          }\n        </div>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}