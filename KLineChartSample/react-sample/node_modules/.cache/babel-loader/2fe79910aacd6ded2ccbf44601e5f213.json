{"ast":null,"code":"export default function (baseTimestamp = Date.now(), basePrice = 5000, dataSize = 800) {\n  const dataList = [];\n  let timestamp = Math.floor(baseTimestamp / 60 / 1000) * 60 * 1000;\n  let baseValue = basePrice;\n  const prices = [];\n\n  for (let i = 0; i < dataSize; i++) {\n    baseValue = baseValue + Math.random() * 20 - 10;\n\n    for (let j = 0; j < 4; j++) {\n      prices[j] = (Math.random() - 0.5) * 12 + baseValue;\n    }\n\n    prices.sort();\n    const openIdx = +Math.round(Math.random() * 3).toFixed(0);\n    let closeIdx = +Math.round(Math.random() * 2).toFixed(0);\n\n    if (closeIdx === openIdx) {\n      closeIdx++;\n    }\n\n    const volume = Math.random() * 50 + 10;\n    const kLineModel = {\n      open: prices[openIdx],\n      low: prices[0],\n      high: prices[3],\n      close: prices[closeIdx],\n      volume: volume,\n      timestamp\n    };\n    timestamp -= 60 * 1000;\n    kLineModel.turnover = (kLineModel.open + kLineModel.close + kLineModel.high + kLineModel.low) / 4 * volume;\n    dataList.unshift(kLineModel);\n  }\n\n  return dataList;\n}","map":{"version":3,"sources":["/home/riddle/uchart/KLineChartSample/react-sample/src/utils/generatedKLineDataList.js"],"names":["baseTimestamp","Date","now","basePrice","dataSize","dataList","timestamp","Math","floor","baseValue","prices","i","random","j","sort","openIdx","round","toFixed","closeIdx","volume","kLineModel","open","low","high","close","turnover","unshift"],"mappings":"AAAA,eAAe,UAAUA,aAAa,GAAGC,IAAI,CAACC,GAAL,EAA1B,EAAsCC,SAAS,GAAG,IAAlD,EAAwDC,QAAQ,GAAG,GAAnE,EAAwE;AACrF,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWR,aAAa,GAAG,EAAhB,GAAqB,IAAhC,IAAwC,EAAxC,GAA6C,IAA7D;AACA,MAAIS,SAAS,GAAGN,SAAhB;AACA,QAAMO,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;AACjCF,IAAAA,SAAS,GAAGA,SAAS,GAAGF,IAAI,CAACK,MAAL,KAAgB,EAA5B,GAAiC,EAA7C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BH,MAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,CAACN,IAAI,CAACK,MAAL,KAAgB,GAAjB,IAAwB,EAAxB,GAA6BH,SAAzC;AACD;;AACDC,IAAAA,MAAM,CAACI,IAAP;AACA,UAAMC,OAAO,GAAG,CAACR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACK,MAAL,KAAgB,CAA3B,EAA8BK,OAA9B,CAAsC,CAAtC,CAAjB;AACA,QAAIC,QAAQ,GAAG,CAACX,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACK,MAAL,KAAgB,CAA3B,EAA8BK,OAA9B,CAAsC,CAAtC,CAAhB;;AACA,QAAIC,QAAQ,KAAKH,OAAjB,EAA0B;AACxBG,MAAAA,QAAQ;AACT;;AACD,UAAMC,MAAM,GAAGZ,IAAI,CAACK,MAAL,KAAgB,EAAhB,GAAqB,EAApC;AACA,UAAMQ,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAEX,MAAM,CAACK,OAAD,CADK;AAEjBO,MAAAA,GAAG,EAAEZ,MAAM,CAAC,CAAD,CAFM;AAGjBa,MAAAA,IAAI,EAAEb,MAAM,CAAC,CAAD,CAHK;AAIjBc,MAAAA,KAAK,EAAEd,MAAM,CAACQ,QAAD,CAJI;AAKjBC,MAAAA,MAAM,EAAEA,MALS;AAMjBb,MAAAA;AANiB,KAAnB;AAQAA,IAAAA,SAAS,IAAI,KAAK,IAAlB;AACAc,IAAAA,UAAU,CAACK,QAAX,GAAsB,CAACL,UAAU,CAACC,IAAX,GAAkBD,UAAU,CAACI,KAA7B,GAAqCJ,UAAU,CAACG,IAAhD,GAAuDH,UAAU,CAACE,GAAnE,IAA0E,CAA1E,GAA8EH,MAApG;AACAd,IAAAA,QAAQ,CAACqB,OAAT,CAAiBN,UAAjB;AACD;;AACD,SAAOf,QAAP;AACD","sourcesContent":["export default function (baseTimestamp = Date.now(), basePrice = 5000, dataSize = 800) {\n  const dataList = []\n  let timestamp = Math.floor(baseTimestamp / 60 / 1000) * 60 * 1000\n  let baseValue = basePrice\n  const prices = []\n  for (let i = 0; i < dataSize; i++) {\n    baseValue = baseValue + Math.random() * 20 - 10\n    for (let j = 0; j < 4; j++) {\n      prices[j] = (Math.random() - 0.5) * 12 + baseValue\n    }\n    prices.sort()\n    const openIdx = +Math.round(Math.random() * 3).toFixed(0)\n    let closeIdx = +Math.round(Math.random() * 2).toFixed(0)\n    if (closeIdx === openIdx) {\n      closeIdx++\n    }\n    const volume = Math.random() * 50 + 10\n    const kLineModel = {\n      open: prices[openIdx],\n      low: prices[0],\n      high: prices[3],\n      close: prices[closeIdx],\n      volume: volume,\n      timestamp\n    }\n    timestamp -= 60 * 1000\n    kLineModel.turnover = (kLineModel.open + kLineModel.close + kLineModel.high + kLineModel.low) / 4 * volume\n    dataList.unshift(kLineModel)\n  }\n  return dataList\n}\n"]},"metadata":{},"sourceType":"module"}