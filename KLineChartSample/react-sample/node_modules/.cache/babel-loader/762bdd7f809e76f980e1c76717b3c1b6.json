{"ast":null,"code":"var _jsxFileName = \"/home/riddle/uchart/KLineChartSample/react-sample/src/chart/TooltipKLineChart.jsx\";\nimport React, { PureComponent } from 'react';\nimport { init, dispose } from 'klinecharts';\nimport generatedKLineDataList from '../utils/generatedKLineDataList';\nimport Layout from '../Layout';\n\nfunction getTooltipOptions(candleShowType, candleShowRule, technicalIndicatorShowRule) {\n  return {\n    candle: {\n      tooltip: {\n        showType: candleShowType,\n        showRule: candleShowRule,\n        labels: ['开盘价', '收盘价', '涨跌幅'],\n        values: kLineData => {\n          const change = (kLineData.close - kLineData.open) / kLineData.open * 100;\n          return [{\n            value: kLineData.open.toFixed(2)\n          }, {\n            value: kLineData.close.toFixed(2)\n          }, {\n            value: `${change.toFixed(2)}%`,\n            color: change < 0 ? '#EF5350' : '#26A69A'\n          }];\n        }\n      }\n    },\n    technicalIndicator: {\n      tooltip: {\n        showRule: technicalIndicatorShowRule\n      }\n    }\n  };\n}\n\nconst rules = [{\n  key: 'always',\n  text: '总是显示'\n}, {\n  key: 'follow_cross',\n  text: '跟随十字光标'\n}, {\n  key: 'none',\n  text: '不显示'\n}];\nexport default class TooltipKLineChart extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      candleShowType: 'standard',\n      candleShowRule: 'always',\n      technicalIndicatorShowRule: 'always'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      candleShowType,\n      candleShowRule,\n      technicalIndicatorShowRule\n    } = this.state;\n    this.kLineChart = init('tooltip-k-line');\n    this.kLineChart.createTechnicalIndicator('MA', false, {\n      id: 'candle_pane'\n    });\n    this.kLineChart.createTechnicalIndicator('KDJ', false, {\n      height: 80\n    });\n    this.kLineChart.setStyleOptions(getTooltipOptions(candleShowType, candleShowRule, technicalIndicatorShowRule));\n    this.kLineChart.applyNewData(generatedKLineDataList());\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      candleShowType,\n      candleShowRule,\n      technicalIndicatorShowRule\n    } = this.state;\n\n    if (prevState.candleShowType !== candleShowType || prevState.candleShowRule !== candleShowRule || prevState.technicalIndicatorShowRule !== technicalIndicatorShowRule) {\n      this.kLineChart.setStyleOptions(getTooltipOptions(candleShowType, candleShowRule, technicalIndicatorShowRule));\n    }\n  }\n\n  componentWillUnmount() {\n    dispose('tooltip-k-line');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      title: \"\\u5341\\u5B57\\u5149\\u6807\\u6587\\u5B57\\u63D0\\u793A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tooltip-k-line\",\n      className: \"k-line-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"k-line-chart-menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"\\u4E3B\\u56FE\\u663E\\u793A\\u7C7B\\u578B\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: _ => {\n        this.setState({\n          candleShowType: 'standard'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"\\u9ED8\\u8BA4\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: _ => {\n        this.setState({\n          candleShowType: 'rect'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"\\u77E9\\u5F62\\u6846\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"k-line-chart-menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"k\\u7EBF\\u63D0\\u793A\\u663E\\u793A\\u89C4\\u5219\"), rules.map(({\n      key,\n      text\n    }) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: key,\n        onClick: _ => {\n          this.setState({\n            candleShowRule: key\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, text);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"k-line-chart-menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"\\u6307\\u6807\\u63D0\\u793A\\u663E\\u793A\\u89C4\\u5219\"), rules.map(({\n      key,\n      text\n    }) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: key,\n        onClick: _ => {\n          this.setState({\n            technicalIndicatorShowRule: key\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, text);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/riddle/uchart/KLineChartSample/react-sample/src/chart/TooltipKLineChart.jsx"],"names":["React","PureComponent","init","dispose","generatedKLineDataList","Layout","getTooltipOptions","candleShowType","candleShowRule","technicalIndicatorShowRule","candle","tooltip","showType","showRule","labels","values","kLineData","change","close","open","value","toFixed","color","technicalIndicator","rules","key","text","TooltipKLineChart","state","componentDidMount","kLineChart","createTechnicalIndicator","id","height","setStyleOptions","applyNewData","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","render","paddingRight","_","setState","map"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nfunction getTooltipOptions (candleShowType, candleShowRule, technicalIndicatorShowRule) {\n  return {\n    candle: {\n      tooltip: {\n        showType: candleShowType,\n        showRule: candleShowRule,\n        labels: ['开盘价', '收盘价', '涨跌幅'],\n        values: kLineData => {\n          const change = (kLineData.close - kLineData.open) / kLineData.open * 100\n          return [\n            { value: kLineData.open.toFixed(2) },\n            { value: kLineData.close.toFixed(2) },\n            {\n              value: `${change.toFixed(2)}%`,\n              color: change < 0 ? '#EF5350' : '#26A69A'\n            }\n          ]\n        }\n      }\n    },\n    technicalIndicator: {\n      tooltip: {\n        showRule: technicalIndicatorShowRule\n      }\n    }\n  }\n}\n\nconst rules = [\n  { key: 'always', text: '总是显示' },\n  { key: 'follow_cross', text: '跟随十字光标' },\n  { key: 'none', text: '不显示' }\n]\n\nexport default class TooltipKLineChart extends PureComponent {\n  state = {\n    candleShowType: 'standard',\n    candleShowRule: 'always',\n    technicalIndicatorShowRule: 'always'\n  }\n\n  componentDidMount () {\n    const { candleShowType, candleShowRule, technicalIndicatorShowRule } = this.state\n    this.kLineChart = init('tooltip-k-line')\n    this.kLineChart.createTechnicalIndicator('MA', false, { id: 'candle_pane' })\n    this.kLineChart.createTechnicalIndicator('KDJ', false, { height: 80 })\n    this.kLineChart.setStyleOptions(getTooltipOptions(\n      candleShowType, candleShowRule, technicalIndicatorShowRule\n    ))\n    this.kLineChart.applyNewData(generatedKLineDataList())\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    const { candleShowType, candleShowRule, technicalIndicatorShowRule } = this.state\n    if (\n      prevState.candleShowType !== candleShowType ||\n      prevState.candleShowRule !== candleShowRule ||\n      prevState.technicalIndicatorShowRule !== technicalIndicatorShowRule\n    ) {\n      this.kLineChart.setStyleOptions(getTooltipOptions(candleShowType, candleShowRule, technicalIndicatorShowRule))\n    }\n  }\n\n  componentWillUnmount () {\n    dispose('tooltip-k-line')\n  }\n\n  render () {\n    return (\n      <Layout\n        title=\"十字光标文字提示\">\n        <div id=\"tooltip-k-line\" className=\"k-line-chart\"/>\n        <div\n          className=\"k-line-chart-menu-container\">\n          <span style={{ paddingRight: 10 }}>主图显示类型</span>\n          <button\n            onClick={_ => {\n              this.setState({\n                candleShowType: 'standard'\n              })\n            }}>\n            默认\n          </button>\n          <button\n            onClick={_ => {\n              this.setState({\n                candleShowType: 'rect'\n              })\n            }}>\n            矩形框\n          </button>\n        </div>\n        <div\n          className=\"k-line-chart-menu-container\">\n          <span style={{ paddingRight: 10 }}>k线提示显示规则</span>\n          {\n            rules.map(({ key, text }) => {\n              return (\n                <button\n                  key={key}\n                  onClick={_ => {\n                    this.setState({\n                      candleShowRule: key\n                    })\n                  }}>\n                  {text}\n                </button>\n              )\n            })\n          }\n        </div>\n        <div\n          className=\"k-line-chart-menu-container\">\n          <span style={{ paddingRight: 10 }}>指标提示显示规则</span>\n          {\n            rules.map(({ key, text }) => {\n              return (\n                <button\n                  key={key}\n                  onClick={_ => {\n                    this.setState({\n                      technicalIndicatorShowRule: key\n                    })\n                  }}>\n                  {text}\n                </button>\n              )\n            })\n          }\n        </div>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}