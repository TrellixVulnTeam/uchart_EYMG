{"ast":null,"code":"var _jsxFileName = \"/home/riddle/uchart/KLineChartSample/react-sample/src/chart/DrawGraphicMarkKLineChart.jsx\";\nimport React, { useEffect } from 'react';\nimport { init, dispose } from 'klinecharts';\nimport { checkPointOnSegment } from 'klinecharts/lib/mark/graphicHelper';\nimport generatedKLineDataList from '../utils/generatedKLineDataList';\nimport Layout from '../Layout';\nconst rect = {\n  name: 'rect',\n  totalStep: 3,\n  checkMousePointOn: (key, type, points, mousePoint) => {\n    return checkPointOnSegment(points[0], points[1], mousePoint);\n  },\n  createGraphicDataSource: (step, tpPoint, xyPoints) => {\n    if (xyPoints.length === 2) {\n      return [{\n        type: 'line',\n        isDraw: false,\n        isCheck: true,\n        dataSource: [[{ ...xyPoints[0]\n        }, {\n          x: xyPoints[1].x,\n          y: xyPoints[0].y\n        }], [{\n          x: xyPoints[1].x,\n          y: xyPoints[0].y\n        }, { ...xyPoints[1]\n        }], [{ ...xyPoints[1]\n        }, {\n          x: xyPoints[0].x,\n          y: xyPoints[1].y\n        }], [{\n          x: xyPoints[0].x,\n          y: xyPoints[1].y\n        }, { ...xyPoints[0]\n        }]]\n      }, {\n        type: 'polygon',\n        isDraw: true,\n        isCheck: false,\n        style: 'fill',\n        dataSource: [[{ ...xyPoints[0]\n        }, {\n          x: xyPoints[1].x,\n          y: xyPoints[0].y\n        }, { ...xyPoints[1]\n        }, {\n          x: xyPoints[0].x,\n          y: xyPoints[1].y\n        }]]\n      }, {\n        type: 'polygon',\n        isDraw: true,\n        isCheck: false,\n        dataSource: [[{ ...xyPoints[0]\n        }, {\n          x: xyPoints[1].x,\n          y: xyPoints[0].y\n        }, { ...xyPoints[1]\n        }, {\n          x: xyPoints[0].x,\n          y: xyPoints[1].y\n        }]]\n      }];\n    }\n\n    return [];\n  }\n};\nconst circle = {\n  name: 'circle',\n  totalStep: 3,\n  checkMousePointOn: (key, type, points, mousePoint) => {\n    const xDis = Math.abs(points.x - mousePoint.x);\n    const yDis = Math.abs(points.y - mousePoint.y);\n    const r = Math.sqrt(xDis * xDis + yDis * yDis);\n    return Math.abs(r - points.radius) < 3;\n  },\n  createGraphicDataSource: (step, tpPoint, xyPoints) => {\n    if (xyPoints.length === 2) {\n      const xDis = Math.abs(xyPoints[0].x - xyPoints[1].x);\n      const yDis = Math.abs(xyPoints[0].y - xyPoints[1].y);\n      const radius = Math.sqrt(xDis * xDis + yDis * yDis);\n      return [{\n        type: 'arc',\n        isDraw: true,\n        isCheck: false,\n        style: 'fill',\n        dataSource: [{ ...xyPoints[0],\n          radius,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        }]\n      }, {\n        type: 'arc',\n        isDraw: true,\n        isCheck: true,\n        dataSource: [{ ...xyPoints[0],\n          radius,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        }]\n      }];\n    }\n\n    return [];\n  }\n};\nconst drawLines = [{\n  key: 'priceLine',\n  text: '价格线'\n}, {\n  key: 'priceChannelLine',\n  text: '价格通道线'\n}, {\n  key: 'parallelStraightLine',\n  text: '平行直线'\n}, {\n  key: 'fibonacciLine',\n  text: '斐波那契回调'\n}, {\n  key: 'rect',\n  text: '自定义矩形'\n}, {\n  key: 'circle',\n  text: '自定义圆'\n}];\nexport default function DrawGraphMarkKLineChart() {\n  let kLineChart;\n  useEffect(() => {\n    kLineChart = init('draw-graph-mark-k-line');\n    kLineChart.addCustomGraphicMark(rect);\n    kLineChart.addCustomGraphicMark(circle);\n    kLineChart.applyNewData(generatedKLineDataList());\n    return () => {\n      dispose('draw-graph-mark-k-line');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"\\u7ED8\\u56FE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"draw-graph-mark-k-line\",\n    className: \"k-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"k-line-chart-menu-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, drawLines.map(({\n    key,\n    text\n  }) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: key,\n      onClick: _ => {\n        kLineChart.createGraphicMark(key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, text);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      kLineChart.removeGraphicMark();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"\\u6E05\\u9664\")));\n}","map":{"version":3,"sources":["/home/riddle/uchart/KLineChartSample/react-sample/src/chart/DrawGraphicMarkKLineChart.jsx"],"names":["React","useEffect","init","dispose","checkPointOnSegment","generatedKLineDataList","Layout","rect","name","totalStep","checkMousePointOn","key","type","points","mousePoint","createGraphicDataSource","step","tpPoint","xyPoints","length","isDraw","isCheck","dataSource","x","y","style","circle","xDis","Math","abs","yDis","r","sqrt","radius","startAngle","endAngle","PI","drawLines","text","DrawGraphMarkKLineChart","kLineChart","addCustomGraphicMark","applyNewData","map","_","createGraphicMark","removeGraphicMark"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport { checkPointOnSegment } from 'klinecharts/lib/mark/graphicHelper'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst rect = {\n  name: 'rect',\n  totalStep: 3,\n  checkMousePointOn: (key, type, points, mousePoint) => {\n    return checkPointOnSegment(points[0], points[1], mousePoint)\n  },\n  createGraphicDataSource: (step, tpPoint, xyPoints) => {\n    if (xyPoints.length === 2) {\n      return [\n        {\n          type: 'line',\n          isDraw: false,\n          isCheck: true,\n          dataSource: [\n            [{ ...xyPoints[0] }, { x: xyPoints[1].x, y: xyPoints[0].y }],\n            [{ x: xyPoints[1].x, y: xyPoints[0].y }, { ...xyPoints[1] }],\n            [{ ...xyPoints[1] }, { x: xyPoints[0].x, y: xyPoints[1].y }],\n            [{ x: xyPoints[0].x, y: xyPoints[1].y }, { ...xyPoints[0] }]\n          ]\n        },\n        {\n          type: 'polygon',\n          isDraw: true,\n          isCheck: false,\n          style: 'fill',\n          dataSource: [[\n            { ...xyPoints[0] },\n            { x: xyPoints[1].x, y: xyPoints[0].y },\n            { ...xyPoints[1] },\n            { x: xyPoints[0].x, y: xyPoints[1].y }\n          ]]\n        },\n        {\n          type: 'polygon',\n          isDraw: true,\n          isCheck: false,\n          dataSource: [[\n            { ...xyPoints[0] },\n            { x: xyPoints[1].x, y: xyPoints[0].y },\n            { ...xyPoints[1] },\n            { x: xyPoints[0].x, y: xyPoints[1].y }\n          ]]\n        }\n      ]\n    }\n    return []\n  }\n}\n\nconst circle = {\n  name: 'circle',\n  totalStep: 3,\n  checkMousePointOn: (key, type, points, mousePoint) => {\n    const xDis = Math.abs(points.x - mousePoint.x)\n    const yDis = Math.abs(points.y - mousePoint.y)\n    const r = Math.sqrt(xDis * xDis + yDis * yDis)\n    return Math.abs(r - points.radius) < 3\n  },\n  createGraphicDataSource: (step, tpPoint, xyPoints) => {\n    if (xyPoints.length === 2) {\n      const xDis = Math.abs(xyPoints[0].x - xyPoints[1].x)\n      const yDis = Math.abs(xyPoints[0].y - xyPoints[1].y)\n      const radius = Math.sqrt(xDis * xDis + yDis * yDis)\n      return [\n        {\n          type: 'arc',\n          isDraw: true,\n          isCheck: false,\n          style: 'fill',\n          dataSource: [\n            { ...xyPoints[0], radius, startAngle: 0, endAngle: Math.PI * 2 }\n          ]\n        },\n        {\n          type: 'arc',\n          isDraw: true,\n          isCheck: true,\n          dataSource: [\n            { ...xyPoints[0], radius, startAngle: 0, endAngle: Math.PI * 2 }\n          ]\n        }\n      ]\n    }\n    return []\n  }\n}\n\nconst drawLines = [\n  { key: 'priceLine', text: '价格线' },\n  { key: 'priceChannelLine', text: '价格通道线' },\n  { key: 'parallelStraightLine', text: '平行直线' },\n  { key: 'fibonacciLine', text: '斐波那契回调' },\n  { key: 'rect', text: '自定义矩形' },\n  { key: 'circle', text: '自定义圆' }\n]\n\nexport default function DrawGraphMarkKLineChart () {\n  let kLineChart\n  useEffect(() => {\n    kLineChart = init('draw-graph-mark-k-line')\n    kLineChart.addCustomGraphicMark(rect)\n    kLineChart.addCustomGraphicMark(circle)\n    kLineChart.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('draw-graph-mark-k-line')\n    }\n  }, [])\n\n  return (\n    <Layout\n      title=\"绘图\">\n      <div\n        id=\"draw-graph-mark-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          drawLines.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => {\n                  kLineChart.createGraphicMark(key)\n                }}>\n                {text}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={() => {\n            kLineChart.removeGraphicMark()\n          }}>\n          清除\n        </button>\n      </div>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}